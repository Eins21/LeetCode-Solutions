

source : https://leetcode.com/problems/shifting-letters/
***********************************************************************************************************
You are given a string s of lowercase English letters and an integer array shifts of the same length.

Call the shift() of a letter, the next letter in the alphabet, (wrapping around so that 'z' becomes 'a').

For example, shift('a') = 'b', shift('t') = 'u', and shift('z') = 'a'.
Now for each shifts[i] = x, we want to shift the first i + 1 letters of s, x times.

Return the final string after all such shifts to s are applied.
************************************************************************************************************

Solution :

public String shiftingLetters(String S, int[] shifts) {
    char[] arr = S.toCharArray();
    int shift = 0;
    for (int i = arr.length - 1; i >= 0; i--) {
        shift = (shift + shifts[i]) % 26;
        arr[i] = (char)((arr[i] - 'a' + shift) % 26 + 'a');
    }
    return new String(arr);
}

Time : O(N)
Space : O(N)
