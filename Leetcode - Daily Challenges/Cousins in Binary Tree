
source : 

************************************************************************************************************************
Given the root of a binary tree with unique values and the values of two different nodes of the tree x and y, 
return true if the nodes corresponding to the values x and y in the tree are cousins, or false otherwise.

Two nodes of a binary tree are cousins if they have the same depth with different parents.

Note that in a binary tree, the root node is at the depth 0, and children of each depth k node are at the depth k + 1.

*************************************************************************************************************************

class Solution {
    
  int x_parent,y_parent,x_height,y_height;
  public boolean isCousins(TreeNode root, int x, int y) {
     isCousinsUtil(root,x,y,0,-1); 
     return x_height == y_height && x_parent != y_parent? true : false;

  }

  void isCousinsUtil(TreeNode root, int x, int y,int height,int parent){

      if(root == null) return;
      if(root.val == x){
          x_parent = parent;
          x_height = height;
      }
      if(root.val == y){
          y_parent = parent;
          y_height = height;
      }

      isCousinsUtil(root.left,x,y,height+1,root.val);
      isCousinsUtil(root.right,x,y,height+1,root.val);
  }

}

Time : O(N)
Space : O(1)
