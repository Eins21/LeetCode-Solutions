
*************************************************************************************************
Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.

*************************************************************************************************

public class MinStack {
	private Node head;

	public void push(int x) {
		if (head == null)
			head = new Node(x, x);
		else
			head = new Node(x, Math.min(x, head.min), head);
	}

	public int pop() {
		int val = head.val;
		head = head.next;
		return val;
	}

	public int top() {
		return head.val;
	}

	public int getMin() {
		return head.min;
	}

	public boolean empty() {
		return head == null;
	}

	private class Node {
		int val;
		int min;
		Node next;

		private Node(int val, int min) {
			this(val, min, null);
		}

		private Node(int val, int min, Node next) {
			this.val = val;
			this.min = min;
			this.next = next;
		}
	}
}
