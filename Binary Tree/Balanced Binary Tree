

source : https://leetcode.com/problems/balanced-binary-tree/
********************************************************************************************************************
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as:

a binary tree in which the left and right subtrees of every node differ in height by no more than 1.

*********************************************************************************************************************

class Solution {
  boolean isBal = true;
  public boolean isBalanced(TreeNode root) {
      maxDepthUtil(root,0);
      return isBal;
  }

  int maxDepthUtil(TreeNode root,int depth){
      if(root == null) return 0;
      int leftH = maxDepthUtil(root.left,depth+1);
      int rightH = maxDepthUtil(root.right,depth+1);
      if(Math.abs(leftH-rightH)>1)
          isBal = false;
      return Math.max(leftH,rightH)+1;
 }
}

Time : O(N)
Space : O(N)
