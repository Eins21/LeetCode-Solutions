

source : https://leetcode.com/problems/diameter-of-binary-tree/
************************************************************************************************************************************************
Given the root of a binary tree, return the length of the diameter of the tree.

The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

The length of a path between two nodes is represented by the number of edges between them.

************************************************************************************************************************************************

class Solution {
  int ans;
  public int diameterOfBinaryTree(TreeNode root) {
     ans = Integer.MIN_VALUE;
     diameterOfBinaryTreeUtil(root);
     return ans; 
  }

  int diameterOfBinaryTreeUtil(TreeNode root){
      if(root == null) return 0;
      int leftHeight   = diameterOfBinaryTreeUtil(root.left);
      int righttHeight = diameterOfBinaryTreeUtil(root.right);
      ans = Math.max(ans,leftHeight+righttHeight);
      return Math.max(leftHeight,righttHeight)+1;
  }
}

Time : O(N)
Space : O(N)
